<!--suppress SpringModelInspection -->
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>
    
    <aop:aspectj-autoproxy/>
    <context:component-scan base-package="com.tutorial.webapp"/>
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"
                           enable-matrix-variables="true"
                           ignore-default-model-on-redirect="true"/>

    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-resolvers>
        <ref bean="contentNegotiatingViewResolver"/>
    </mvc:view-resolvers>

    <mvc:resources mapping="/js/**" location="/js/" cache-period="10000"/>
    <mvc:resources mapping="/css/**" location="/css/" cache-period="10000"/>
    <mvc:resources mapping="/img/**" location="/img/" cache-period="10000"/>
    <mvc:resources mapping="/doc/**" location="/doc/" cache-period="10000"/>
    <mvc:default-servlet-handler/>

    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
    </mvc:interceptors>
    <mvc:tiles-configurer check-refresh="true" validate-definitions="true">
        <mvc:definitions location="/WEB-INF/tiles/definitions.xml"/>
    </mvc:tiles-configurer>

    <bean id="pathExtensionContentNegotiationStrategy"
          class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
        <constructor-arg>
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </constructor-arg>
    </bean>
    <bean id="parameterContentNegotiationStrategy"
          class="org.springframework.web.accept.ParameterContentNegotiationStrategy">
        <constructor-arg>
            <map>
                <entry key="json" value-type="org.springframework.http.MediaType" value="application/json"/>
                <entry key="xml" value-type="org.springframework.http.MediaType" value="application/xml"/>
            </map>
        </constructor-arg>
        <property name="parameterName" value="format"/>
    </bean>
    <bean id="headerContentNegotiationStrategy"
          class="org.springframework.web.accept.HeaderContentNegotiationStrategy"/>
    <bean id="fixedContentNegotiationStrategy" class="org.springframework.web.accept.FixedContentNegotiationStrategy">
        <constructor-arg>
            <value type="org.springframework.http.MediaType">application/json</value>
        </constructor-arg>
    </bean>
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManager">
        <constructor-arg>
            <list>
                <ref bean="pathExtensionContentNegotiationStrategy"/>
                <ref bean="parameterContentNegotiationStrategy"/>
                <ref bean="headerContentNegotiationStrategy"/>
                <ref bean="fixedContentNegotiationStrategy"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="contentNegotiatingViewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
                </bean>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            </list>
        </property>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n.messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="expressionHandler"
          class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator">
            <bean class="com.tutorial.security.CustomPermissionEvaluator">
                <property name="permissionJpaRepository" ref="permissionJpaRepository"/>
            </bean>
        </property>
    </bean>
</beans>